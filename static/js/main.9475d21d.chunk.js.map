{"version":3,"sources":["black.png","white.png","tictactoe.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","lines","Square","props","react_default","a","createElement","id","className","onClick","style","styles","tabIndex","onKeyUp","event","keyCode","preventDefault","value","src","X","alt","width","height","O","Board","i","_this","this","winner","includes","background","squares","renderSquare","Component","calculateWinner","length","_lines$i2","Object","slicedToArray","b","c","startsWith","TicTacToe","_this2","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","history","Array","fill","stepNumber","xIsNext","winSquares","keybinding","y","Math","floor","x","console","log","key","_this3","window","onkeydown","e","ele","document","activeElement","_this3$getPosition","getPosition","_this3$getPosition2","_this3$getTarget","getTarget","_this3$getTarget2","x1","y1","idx","getIndex","target","getElementById","focus","slice","_ref","_ref2","setState","concat","step","status","_this4","current","_calculateWinner","_calculateWinner2","moves","map","move","desc","jumpTo","tictactoe_Board","handleClick","level","dup","reduce","acc","arr","indexOf","push","_lines$i","_lines$_i","random","Boolean","location","hostname","match","ReactDOM","render","src_tictactoe","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9475d21d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/black.0511472b.png\";","module.exports = __webpack_public_path__ + \"static/media/white.a91ced50.png\";","import React, {\r\n    Component\r\n} from 'react'\r\nimport './tictactoe.css';\r\nimport X from './black.png'\r\nimport O from './white.png'\r\n\r\nconst lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\nfunction Square(props) {\r\n    const value = () => {\r\n        if (props.value === 'X') {\r\n            // return <div className=\"bluedot\"></div>\r\n            return <img src={X} alt='' width=\"180px\" height=\"180px\"></img>\r\n        } else if (props.value === 'O') {\r\n            // return <div className=\"reddot\"></div>\r\n            return <img src={O} alt='' width=\"180px\" height=\"180px\"></img>\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    const enterKeyBind = function(event) {\r\n        if (event.keyCode === 13 || event.keyCode === 32) {\r\n            // Cancel the default action, if needed\r\n            event.preventDefault();\r\n            // Trigger the button element with a click\r\n            props.onClick()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id={props.id} className=\"square move\" onClick={props.onClick} style={props.styles} tabIndex=\"0\" onKeyUp={enterKeyBind} >\r\n            {value()}\r\n        </div>\r\n    )\r\n}\r\n\r\nclass Board extends Component {\r\n     renderSquare(i) {\r\n         let styles = {}\r\n        if (this.props.winner.includes(i)) {\r\n                styles = {background: \"red\"}\r\n            }\r\n        return (\r\n        <Square value={this.props.squares[i]}\r\n            onClick={() => this.props.onClick(i)}\r\n            styles={styles} id={i}\r\n         />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"board\" tabIndex=\"0\">\r\n                {this.renderSquare(0)}\r\n                {this.renderSquare(1)}\r\n                {this.renderSquare(2)}\r\n                {this.renderSquare(3)}\r\n                {this.renderSquare(4)}\r\n                {this.renderSquare(5)}\r\n                {this.renderSquare(6)}\r\n                {this.renderSquare(7)}\r\n                {this.renderSquare(8)}\r\n            </div>\r\n    )}\r\n}\r\n\r\nclass TicTacToe extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            winSquares: []\r\n        }\r\n        this.keybinding();\r\n    }\r\n\r\n    getPosition(i) {\r\n        const y = Math.floor(i / 3)\r\n        const x = (i % 3)\r\n        console.log((i % 3))\r\n        return [x, y]\r\n    }\r\n\r\n    getTarget(x, y, key) {\r\n        switch (key) {\r\n            case 'ArrowLeft':\r\n            return [x-1, y]\r\n            case 'ArrowRight':\r\n            return [x+1, y]\r\n            case 'ArrowUp':\r\n            return [x, y-1]\r\n            case 'ArrowDown':\r\n            return [x, y+1]\r\n            default:\r\n            return;\r\n        }\r\n    }\r\n\r\n    getIndex(x, y) {\r\n        return (y * 3) + x\r\n    }\r\n\r\n    keybinding() {\r\n        // document.getElementsByTagName('Board').onkeydown = function(e) {\r\n        window.onkeydown = (e) => {\r\n            // const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n            // const current = history[history.length - 1];\r\n            // const squares = current.squares.slice();\r\n            e = e || window.event;\r\n\r\n            const ele = document.activeElement\r\n            // console.log(\"current: \"+ele.id)\r\n            const [x, y] = this.getPosition(ele.id)\r\n            // console.log(\"curr position: \"+x+','+y)\r\n            const [x1, y1] = this.getTarget(x, y, e.key)\r\n            // console.log(\"tgt position: \"+x1+','+y1)\r\n            const idx = this.getIndex(x1, y1)\r\n            // console.log(\"tgt idx: \"+idx)\r\n            if (idx >= 0 && idx <= 8) {\r\n            const target = document.getElementById(idx)\r\n                if (target) {\r\n                    e.preventDefault(); // prevent the default action (scroll / move caret)\r\n                    target.focus()\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        const [a, b, c, winner] = calculateWinner(squares) || squares[i]\r\n        if (winner) {\r\n            return;\r\n        }\r\n        if (squares[i] === null) {\r\n            squares[i] = (this.state.xIsNext) ? 'X' : 'O';\r\n            this.setState({\r\n                history: history.concat([{squares: squares,}]),\r\n                stepNumber: history.length,\r\n                xIsNext: !this.state.xIsNext\r\n            });\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const [a, b, c, winner] = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n            'Go to move #' + move : 'GO to game start';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        const random = (level) => {\r\n            if (level) {\r\n                if (level >= 2) {\r\n                    const dup = lines.reduce((acc, ele, i, arr) => { return arr.indexOf(ele) !== i && arr.indexOf(ele) === -1 ? acc.push(ele) : acc}, [] )\r\n                    console.log(dup)\r\n                    for (let i=0;i<lines.length; i++) {\r\n                        const [a, b, c] = lines[i]\r\n                        if (current.squares[a] && current.squares[a] === current.squares[b] && current.squares[c] === null) {\r\n                            return c;\r\n                        } else if (current.squares[a] && current.squares[a] === current.squares[c] && current.squares[b] === null) {\r\n                            return b;\r\n                        } else if (current.squares[c] &&current.squares[c] === current.squares[b] && current.squares[a] === null) {\r\n                            return a;\r\n                        }\r\n                    }\r\n                } else if (level >= 1) {\r\n                    for (let i=0;i<lines.length; i++) {\r\n                        const [a, b, c] = lines[i]\r\n                        if (current.squares[a] && current.squares[a] === current.squares[b] && current.squares[c] === null) {\r\n                            return c;\r\n                        } else if (current.squares[a] && current.squares[a] === current.squares[c] && current.squares[b] === null) {\r\n                            return b;\r\n                        } else if (current.squares[c] &&current.squares[c] === current.squares[b] && current.squares[a] === null) {\r\n                            return a;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            let idx = Math.floor(Math.random()*current.squares.length)\r\n            while (current.squares[idx] !== null) {\r\n                idx = Math.floor(Math.random()*current.squares.length)\r\n            }\r\n            return idx\r\n        }\r\n\r\n        const takeTurn = () => { \r\n            if (winner)\r\n                return\r\n            const squares = current.squares.slice();\r\n            squares[random(1)] = (this.state.xIsNext) ? 'X' : 'O';\r\n            this.setState({\r\n                history: history.concat([{squares: squares,}]),\r\n                stepNumber: history.length,\r\n                xIsNext: !this.state.xIsNext\r\n            })\r\n         }\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else {\r\n            let s = (this.state.xIsNext) ? 'Black Cat' : 'White Cat';\r\n            status = 'Next Player: ' + s;\r\n        }\r\n\r\n        return ( \r\n        <div className=\"parent\">\r\n            <div >\r\n                <Board squares={current.squares}\r\n                onClick={(i) => this.handleClick(i)}\r\n                winner={[a,b,c] }/>\r\n            </div>\r\n            <div className=\"right\">\r\n                <button onClick={takeTurn}>Computer's Turn</button>\r\n                <div className=\"info\">\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    if (!squares)\r\n        return [];\r\n\r\n\r\n      for (let i=0;i< lines.length; i++) {\r\n          const [a, b, c] = lines[i];\r\n          if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n              let winner = 'Black Cat'\r\n              if (squares[a].startsWith('white'))\r\n                winner = 'White Cat'\r\n              return [a, b, c, winner]\r\n          }\r\n      }\r\n      return [];\r\n}\r\n\r\nexport default TicTacToe","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TicTacToe from './tictactoe';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<TicTacToe />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}